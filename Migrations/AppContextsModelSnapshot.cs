// <auto-generated />
using System;
using ClaseEntityFramework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace WorkPoint.Migrations
{
    [DbContext(typeof(AppContexts))]
    partial class AppContextsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClaseEntityFramework.Models.Accion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Acciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RolEnArea")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.AsignacionRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AsignacionesRoles");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.CriterioDeGravedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CriteriosDeGravedad");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Evidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivoBase64")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObservacionId")
                        .HasColumnType("integer");

                    b.Property<long>("TamañoBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoArchivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ObservacionId");

                    b.ToTable("Evidencias");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.EvidenciaSolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivoBase64")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SolucionId")
                        .HasColumnType("integer");

                    b.Property<long>("TamañoBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoArchivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("SolucionId");

                    b.ToTable("EvidenciasSolucion");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Inspeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<int>("AuditorId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("AuditorId");

                    b.ToTable("Inspecciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Observacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("CriterioDeGravedadId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InspeccionId")
                        .HasColumnType("integer");

                    b.Property<int>("ProblemaId")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CriterioDeGravedadId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("InspeccionId");

                    b.HasIndex("ProblemaId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("Observaciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccionId")
                        .HasColumnType("integer");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccionId");

                    b.HasIndex("RolId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Problema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Problemas");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Seguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ObservacionId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ObservacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Solucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FechaImplementacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ObservacionId")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ObservacionId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("Soluciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Sugerencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("ProblemaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProblemaId");

                    b.ToTable("Sugerencias");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Asignacion", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Area", "Area")
                        .WithMany("Asignaciones")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Usuario", "Usuario")
                        .WithMany("Asignaciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.AsignacionRoles", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Rol", "Rol")
                        .WithMany("AsignacionesRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Usuario", "Usuario")
                        .WithMany("AsignacionesRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Evidencia", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Observacion", "Observacion")
                        .WithMany("Evidencias")
                        .HasForeignKey("ObservacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Observacion");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.EvidenciaSolucion", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Solucion", "Solucion")
                        .WithMany("EvidenciasSolucion")
                        .HasForeignKey("SolucionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solucion");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Inspeccion", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Area", "Area")
                        .WithMany("Inspecciones")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Usuario", "Auditor")
                        .WithMany("Inspecciones")
                        .HasForeignKey("AuditorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Auditor");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Observacion", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Categoria", "Categoria")
                        .WithMany("Observaciones")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.CriterioDeGravedad", "CriterioDeGravedad")
                        .WithMany("Observaciones")
                        .HasForeignKey("CriterioDeGravedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Estado", "Estado")
                        .WithMany("Observaciones")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Inspeccion", "Inspeccion")
                        .WithMany("Observaciones")
                        .HasForeignKey("InspeccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Problema", "Problema")
                        .WithMany("Observaciones")
                        .HasForeignKey("ProblemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Usuario", "Responsable")
                        .WithMany("ObservacionesResponsable")
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("CriterioDeGravedad");

                    b.Navigation("Estado");

                    b.Navigation("Inspeccion");

                    b.Navigation("Problema");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Permiso", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Accion", "Accion")
                        .WithMany("Permisos")
                        .HasForeignKey("AccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Rol", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accion");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Seguimiento", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Observacion", "Observacion")
                        .WithMany("Seguimientos")
                        .HasForeignKey("ObservacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Usuario", "Usuario")
                        .WithMany("Seguimientos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Observacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Solucion", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Observacion", "Observacion")
                        .WithMany("Soluciones")
                        .HasForeignKey("ObservacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClaseEntityFramework.Models.Usuario", "Responsable")
                        .WithMany("Soluciones")
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Observacion");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Sugerencia", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Problema", "Problema")
                        .WithMany("Sugerencias")
                        .HasForeignKey("ProblemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problema");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Usuario", b =>
                {
                    b.HasOne("ClaseEntityFramework.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Accion", b =>
                {
                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Area", b =>
                {
                    b.Navigation("Asignaciones");

                    b.Navigation("Inspecciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Categoria", b =>
                {
                    b.Navigation("Observaciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.CriterioDeGravedad", b =>
                {
                    b.Navigation("Observaciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Estado", b =>
                {
                    b.Navigation("Observaciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Inspeccion", b =>
                {
                    b.Navigation("Observaciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Observacion", b =>
                {
                    b.Navigation("Evidencias");

                    b.Navigation("Seguimientos");

                    b.Navigation("Soluciones");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Problema", b =>
                {
                    b.Navigation("Observaciones");

                    b.Navigation("Sugerencias");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Rol", b =>
                {
                    b.Navigation("AsignacionesRoles");

                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Solucion", b =>
                {
                    b.Navigation("EvidenciasSolucion");
                });

            modelBuilder.Entity("ClaseEntityFramework.Models.Usuario", b =>
                {
                    b.Navigation("Asignaciones");

                    b.Navigation("AsignacionesRoles");

                    b.Navigation("Inspecciones");

                    b.Navigation("ObservacionesResponsable");

                    b.Navigation("Seguimientos");

                    b.Navigation("Soluciones");
                });
#pragma warning restore 612, 618
        }
    }
}
